//
//  SearchInteractor.swift
//  CleanSwiftArchitectureExample
//
//  Created by Evgeniy Antonov on 7/26/18.
//  Copyright (c) 2018 Evgeniy Antonov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchBusinessLogic {
    func search(request: Search.RandomCocktail.Request)
}

protocol SearchDataStore {}

class SearchInteractor: SearchBusinessLogic, SearchDataStore {
    var presenter: SearchPresentationLogic?
    var worker: SearchWorker?
    
    // MARK: Do search
    
    func search(request: Search.RandomCocktail.Request) {
        worker = SearchWorker()
        worker?.getRandomCocktail(with: { [weak self] (cocktail) in
            let response = Search.RandomCocktail.Response(cocktail: cocktail, isError: false, errorMessage: nil)
            self?.presenter?.presentCoctails(response: response)
            }, failure: { [weak self] (error) in
                let response = Search.RandomCocktail.Response(cocktail: nil, isError: true, errorMessage: error.localizedDescription)
                self?.presenter?.presentCoctails(response: response)
        })
    }
}
