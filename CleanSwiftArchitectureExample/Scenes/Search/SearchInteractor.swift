//
//  SearchInteractor.swift
//  CleanSwiftArchitectureExample
//
//  Created by Evgeniy Antonov on 7/26/18.
//  Copyright (c) 2018 Evgeniy Antonov. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchBusinessLogic {
    func search(request: Search.Coctails.Request)
}

protocol SearchDataStore {
    //var name: String { get set }
}

class SearchInteractor: SearchBusinessLogic, SearchDataStore {
    var presenter: SearchPresentationLogic?
    var worker: SearchWorker?
    
    // MARK: Do search
    
    func search(request: Search.Coctails.Request) {
        if request.searchPhrase == nil {
            let response = Search.Coctails.Response(coctails: nil, isError: true, errorMessage: "error")
            presenter?.presentCoctails(response: response)
        }
            
        worker = SearchWorker()
        worker?.fetchCoctails(with: request.searchPhrase!, success: { [weak self] (response) in
            let response = Search.Coctails.Response(coctails: response.coctails, isError: false, errorMessage: nil)
            self?.presenter?.presentCoctails(response: response)
        }, failure: { [weak self] (response) in
            let response = Search.Coctails.Response(coctails: nil, isError: true, errorMessage: response.errorMessage)
            self?.presenter?.presentCoctails(response: response)
        })
    }
}
